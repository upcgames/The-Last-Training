{
  "_args": [
    [
      {
        "raw": "resource-loader@^2.0.9",
        "scope": null,
        "escapedName": "resource-loader",
        "name": "resource-loader",
        "rawSpec": "^2.0.9",
        "spec": ">=2.0.9 <3.0.0",
        "type": "range"
      },
      "/home/u201515078/Escritorio/Git/The-Last-Training/node_modules/pixi.js"
    ]
  ],
  "_from": "resource-loader@>=2.0.9 <3.0.0",
  "_id": "resource-loader@2.0.9",
  "_inCache": true,
  "_location": "/resource-loader",
  "_nodeVersion": "6.10.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/resource-loader-2.0.9.tgz_1498750060251_0.2582164634950459"
  },
  "_npmUser": {
    "name": "englercj",
    "email": "englercj@live.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "resource-loader@^2.0.9",
    "scope": null,
    "escapedName": "resource-loader",
    "name": "resource-loader",
    "rawSpec": "^2.0.9",
    "spec": ">=2.0.9 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/pixi.js"
  ],
  "_resolved": "https://registry.npmjs.org/resource-loader/-/resource-loader-2.0.9.tgz",
  "_shasum": "65d3b50a982e48260bacf835284e1a72d978806d",
  "_shrinkwrap": null,
  "_spec": "resource-loader@^2.0.9",
  "_where": "/home/u201515078/Escritorio/Git/The-Last-Training/node_modules/pixi.js",
  "author": {
    "name": "Chad Engler",
    "email": "chad@pantherdev.com"
  },
  "babel": {
    "presets": [
      [
        "es2015",
        {
          "loose": true
        }
      ]
    ]
  },
  "bugs": {
    "url": "https://github.com/englercj/resource-loader/issues"
  },
  "dependencies": {
    "mini-signals": "^1.1.1",
    "parse-uri": "^1.0.0"
  },
  "description": "A generic asset loader, made with web games in mind.",
  "devDependencies": {
    "@englercj/code-style": "^1.0.6",
    "babel-cli": "^6.18.0",
    "babel-preset-es2015": "^6.18.0",
    "browserify": "^13.1.1",
    "chai": "^3.5.0",
    "eslint": "^3.12.2",
    "gh-pages": "^0.12.0",
    "ink-docstrap": "^1.3.0",
    "jaguarjs-jsdoc": "^1.0.2",
    "jsdoc": "^3.4.3",
    "karma": "^1.3.0",
    "karma-chrome-launcher": "^2.0.0",
    "karma-firefox-launcher": "^1.0.0",
    "karma-mocha": "^1.3.0",
    "karma-mocha-reporter": "^2.2.1",
    "karma-sinon-chai": "^1.2.4",
    "mkdirp": "^0.5.1",
    "mocha": "^3.2.0",
    "sinon": "^1.17.6",
    "sinon-chai": "^2.8.0",
    "uglify-js": "^2.7.5",
    "watchify": "^3.8.0"
  },
  "directories": {},
  "dist": {
    "shasum": "65d3b50a982e48260bacf835284e1a72d978806d",
    "tarball": "https://registry.npmjs.org/resource-loader/-/resource-loader-2.0.9.tgz"
  },
  "files": [
    "dist",
    "lib",
    "src",
    "package.json",
    "CONTRIBUTING.md",
    "LICENSE",
    "README.md"
  ],
  "gitHead": "d4729e98eac0e9349d3aa49c35fc72893234fd1d",
  "homepage": "https://github.com/englercj/resource-loader",
  "keywords": [],
  "license": "MIT",
  "main": "./lib/index.js",
  "maintainers": [
    {
      "name": "englercj",
      "email": "englercj@live.com"
    }
  ],
  "name": "resource-loader",
  "optionalDependencies": {},
  "readme": "# Resource Loader [![Build Status](https://travis-ci.org/englercj/resource-loader.svg?branch=master)](https://travis-ci.org/englercj/resource-loader)\n\nA generic resource loader, made with web games in mind.\n\n## Usage\n\n```js\n// ctor\nconst loader = new Loader();\n\nloader\n    // Chainable `add` to enqueue a resource\n    .add(name, url, options)\n\n    // Chainable `pre` to add a middleware that runs for each resource, *before* loading that resource.\n    // This is useful to implement custom caching modules (using filesystem, indexeddb, memory, etc).\n    .pre(cachingMiddleware)\n\n    // Chainable `use` to add a middleware that runs for each resource, *after* loading that resource.\n    // This is useful to implement custom parsing modules (like spritesheet parsers, spine parser, etc).\n    .use(parsingMiddleware)\n\n    // The `load` method loads the queue of resources, and calls the passed in callback called once all\n    // resources have loaded.\n    .load((loader, resources) => {\n        // resources is an object where the key is the name of the resource loaded and the value is the resource object.\n        // They have a couple default properties:\n        // - `url`: The URL that the resource was loaded from\n        // - `error`: The error that happened when trying to load (if any)\n        // - `data`: The raw data that was loaded\n        // also may contain other properties based on the middleware that runs.\n    });\n\n// throughout the process multiple signals can be dispatched.\nloader.onProgress.add(() => {}); // called once per loaded/errored file\nloader.onError.add(() => {}); // called once per errored file\nloader.onLoad.add(() => {}); // called once per loaded file\nloader.onComplete.add(() => {}); // called once when the queued resources all load.\n```\n\n## Building\n\nYou will need to have [node][node] and [gulp][gulp] setup on your machine.\n\nThen you can install dependencies and build:\n\n```js\nnpm i && npm run build\n```\n\nThat will output the built distributables to `./dist`.\n\n[node]:       http://nodejs.org/\n[gulp]:       http://gulpjs.com/\n\n## Supported Browsers\n\n- IE 9+\n- FF 13+\n- Chrome 20+\n- Safari 6+\n- Opera 12.1+\n\n## Upgrading to v2\n\n- No more events, all signals now\n- No more isJson, isXml, etc. Now use `res.type === Resource.TYPE.JSON`, etc.\n- Removed `before` (in favor of `pre`) and `after` (in favor of `use`).\n- If a middleware adds more resources, it *must* pass in the parent resource in options for `.add()`.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/englercj/resource-loader.git"
  },
  "scripts": {
    "build": "browserify -d -s Loader -e ./lib/index.js -o ./dist/resource-loader.js",
    "clean": "rm -rf ./dist ./lib && npm run setup",
    "deploy": "gh-pages -d docs",
    "docs": "jsdoc -c jsdoc.conf.json -R README.md",
    "full-build": "npm run clean && npm run build && npm run minify",
    "lib": "babel src --out-dir lib -s",
    "lint": "eslint src/ test/",
    "minify": "uglifyjs --output ./dist/resource-loader.min.js -- ./dist/resource-loader.js",
    "postpublish": "npm run deploy",
    "prebuild": "npm run setup && npm run lib",
    "predeploy": "rm -rf ./docs && npm run docs",
    "prepublish": "npm run full-build",
    "pretest": "npm run full-build",
    "setup": "mkdirp dist lib",
    "start": "npm run full-build",
    "test": "npm run test-dev -- --single-run",
    "test-dev": "karma start test/karma.conf.js"
  },
  "version": "2.0.9"
}
