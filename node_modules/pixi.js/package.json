{
  "_args": [
    [
      {
        "raw": "pixi.js",
        "scope": null,
        "escapedName": "pixi.js",
        "name": "pixi.js",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/u201515078/Escritorio/Git/The-Last-Training"
    ]
  ],
  "_from": "pixi.js@latest",
  "_id": "pixi.js@4.6.1",
  "_inCache": true,
  "_location": "/pixi.js",
  "_nodeVersion": "6.11.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/pixi.js-4.6.1.tgz_1510858446302_0.35350848245434463"
  },
  "_npmUser": {
    "name": "bigtimebuddy",
    "email": "matt@mattkarl.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "pixi.js",
    "scope": null,
    "escapedName": "pixi.js",
    "name": "pixi.js",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/pixi.js/-/pixi.js-4.6.1.tgz",
  "_shasum": "8a231f70e529c73bb4c75fbf684b425d7f153a8e",
  "_shrinkwrap": null,
  "_spec": "pixi.js",
  "_where": "/home/u201515078/Escritorio/Git/The-Last-Training",
  "author": {
    "name": "Mat Groves"
  },
  "bugs": {
    "url": "https://github.com/pixijs/pixi.js/issues"
  },
  "contributors": [
    {
      "name": "Ivan Popelyshev",
      "email": "ivan.popelyshev@gmail.com"
    },
    {
      "name": "Matt Karl",
      "email": "matt@mattkarl.com"
    },
    {
      "name": "Chad Engler",
      "email": "chad@pantherdev.com"
    },
    {
      "name": "Richard Davey",
      "email": "rdavey@gmail.com"
    }
  ],
  "dependencies": {
    "bit-twiddle": "^1.0.2",
    "earcut": "^2.0.7",
    "eventemitter3": "^2.0.0",
    "ismobilejs": "^0.4.0",
    "object-assign": "^4.0.1",
    "pixi-gl-core": "^1.0.3",
    "remove-array-items": "^1.0.0",
    "resource-loader": "^2.0.9"
  },
  "description": "The HTML5 Creation Engine: Create beautiful digital content with the fastest, most flexible 2D WebGL renderer.",
  "devDependencies": {
    "@pixi/jsdoc-template": "^2.0.0",
    "babel-cli": "^6.18.0",
    "babel-plugin-static-fs": "^1.1.0",
    "babel-plugin-version-inline": "^1.0.0",
    "babel-preset-es2015": "^6.14.0",
    "babelify": "^7.3.0",
    "del": "^2.2.0",
    "electron": "^1.4.15",
    "eslint": "^3.5.0",
    "floss": "^2.0.1",
    "js-md5": "^0.4.1",
    "jsdoc": "3.4.3",
    "minimist": "^1.2.0",
    "mkdirp": "^0.5.1",
    "parallelshell": "^2.0.0",
    "pixify": "^1.7.0",
    "rimraf": "^2.5.3",
    "watch": "^0.19.1"
  },
  "directories": {},
  "dist": {
    "shasum": "8a231f70e529c73bb4c75fbf684b425d7f153a8e",
    "tarball": "https://registry.npmjs.org/pixi.js/-/pixi.js-4.6.1.tgz"
  },
  "files": [
    "dist/",
    "lib/",
    "CONTRIBUTING.md",
    "LICENSE",
    "package.json",
    "README.md"
  ],
  "gitHead": "e58b8994cecfcdaeda48ba1f4fc5d490153fbda4",
  "homepage": "http://goodboydigital.com/",
  "license": "MIT",
  "main": "./lib/index.js",
  "maintainers": [
    {
      "name": "doormat23",
      "email": "mat@goodboydigital.com"
    },
    {
      "name": "englercj",
      "email": "englercj@live.com"
    }
  ],
  "name": "pixi.js",
  "optionalDependencies": {},
  "readme": "PixiJS â€” The HTML5 Creation Engine\n=============\n\n![pixi.js logo](http://www.goodboydigital.com/pixijs/pixiV4_wide_full.jpg)\n\n[![Inline docs](http://inch-ci.org/github/pixijs/pixi.js.svg?branch=dev)](http://inch-ci.org/github/pixijs/pixi.js)\n[![Build Status](https://travis-ci.org/pixijs/pixi.js.svg?branch=dev)](https://travis-ci.org/pixijs/pixi.js)\n\nThe aim of this project is to provide a fast lightweight 2D library that works\nacross all devices. The PixiJS renderer allows everyone to enjoy the power of\nhardware acceleration without prior knowledge of WebGL. Also, it's fast. Really fast.\n\nIf you want to keep up to date with the latest PixiJS news then feel free to follow us on twitter\n([@doormat23](https://twitter.com/doormat23), [@rolnaaba](https://twitter.com/rolnaaba), [@bigtimebuddy](https://twitter.com/bigtimebuddy), [@ivanpopelyshev](https://twitter.com/ivanpopelyshev))\nand we will keep you posted! You can also check back on [our site](http://www.pixijs.com)\nas any breakthroughs will be posted up there too!\n\n**Your support helps us make PixiJS even better. Make your pledge on [Patreon](https://www.patreon.com/user?u=2384552&ty=h&u=2384552) and we'll love you forever!**\n\n### What to Use PixiJS for and When to Use It\n\nPixiJS is a rendering library that will allow you to create rich, interactive graphics, cross platform applications, and games without having to dive into the WebGL API or deal with browser and device compatibility.\n\nPixiJS has full [WebGL](https://en.wikipedia.org/wiki/WebGL) support and seamlessly falls back to HTML5's [canvas](https://en.wikipedia.org/wiki/Canvas_element) if needed. As a framework, PixiJS is a fantastic tool for authoring interactive content, *especially with the move away from Adobe Flash in recent years*. Use it for your graphics rich, interactive websites, applications, and HTML5 games.  Out of the box cross-platform compatibility and graceful degradation mean you have less work to do and have more fun doing it! If you want to create polished and refined experiences relatively quickly, without delving into dense, low level code, all while avoiding the headaches of browser inconsistencies, then sprinkle your next project with some PixiJS magic!\n\n**Boost your development and feel free to use your imagination!**\n\n### Learn ###\n- Website: Find out more about PixiJS on the [offical website](http://www.pixijs.com/).\n- Getting started: Check out @kittykatattack's comprehensive [tutorial](https://github.com/kittykatattack/learningPixi).\n- Examples: Get stuck right in and play around with PixiJS code and features right [here](http://pixijs.github.io/examples/)!\n- Docs: Get to know the PixiJS API by checking out the [docs](https://pixijs.github.io/docs/).\n- Wiki: Other misc tutorials and resources are [on the Wiki](https://github.com/pixijs/pixi.js/wiki).\n\n### Community ###\n- Forums: Check out the [forum](http://www.html5gamedevs.com/forum/15-pixijs/) and [Stackoverflow](http://stackoverflow.com/search?q=pixi.js), both friendly places to ask your pixi questions.\n- Inspiration: Check out the [gallery](http://www.pixijs.com/gallery) to see some of the amazing things people have created!\n- Chat: You can join us on [Gitter](https://gitter.im/pixijs/pixi.js) To chat about PixiJS. We also now have a Slack channel. If you would like to join it please Send me an email (mat@goodboydigital.com) and I will invite you in.\n\n\n### Setup ###\n\nIt's easy to get started with PixiJS! Simply download a [prebuilt build](https://github.com/pixijs/pixi.js/wiki/FAQs#where-can-i-get-a-build)!\n\nAlternatively, PixiJS can be installed with [npm](https://docs.npmjs.com/getting-started/what-is-npm) or simply using a content delivery network (CDN) URL to embed PixiJS directly on your HTML page.\n\n_Note: After v4.5.0, support for the [Bower](https://bower.io) package manager has been dropped. Please see the [release notes](https://github.com/pixijs/pixi.js/releases/tag/v4.5.0) for more information._\n\n#### NPM Install\n\n```\n$> npm install pixi.js\n```\n\n#### CDN Install (via cdnjs)\n\n```html\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/pixi.js/4.5.1/pixi.min.js\"></script>\n```\n\n_Note: `4.5.1` can be replaced by any [released](https://github.com/pixijs/pixi.js/releases) version._\n\n### Demos ###\n\n- [WebGL Filters!](http://pixijs.github.io/pixi-filters/examples/)\n- [Run pixie run](http://www.goodboydigital.com/runpixierun)\n- [Fight for Everyone](http://www.goodboydigital.com/casestudies/fightforeveryone)\n- [Flash vs HTML](http://flashvhtml.com)\n- [Bunny Demo](http://www.goodboydigital.com/pixijs/bunnymark)\n- [Storm Brewing](http://www.goodboydigital.com/pixijs/storm)\n- [Filters Demo](http://www.goodboydigital.com/pixijs/examples/15/indexAll.html)\n- [Render Texture Demo](http://www.goodboydigital.com/pixijs/examples/11)\n- [Primitives Demo](http://www.goodboydigital.com/pixijs/examples/13)\n- [Masking Demo](http://www.goodboydigital.com/pixijs/examples/14)\n- [Interaction Demo](http://www.goodboydigital.com/pixijs/examples/6)\n- [photonstorm's Balls Demo](http://gametest.mobi/pixi/balls)\n- [photonstorm's Morph Demo](http://gametest.mobi/pixi/morph)\n\nThanks to [@photonstorm](https://twitter.com/photonstorm) for providing\nthose last 2 examples and allowing us to share the source code :)\n\n### Contribute ###\n\nWant to be part of the PixiJS project? Great! All are welcome! We will get there quicker\ntogether :) Whether you find a bug, have a great feature request or you fancy owning a task\nfrom the road map above feel free to get in touch.\n\nMake sure to read the [Contributing Guide](https://github.com/pixijs/pixi.js/blob/master/CONTRIBUTING.md)\nbefore submitting changes.\n\n### Current features ###\n\n- WebGL renderer (with automatic smart batching allowing for REALLY fast performance)\n- Canvas renderer (Fastest in town!)\n- Full scene graph\n- Super easy to use API (similar to the flash display list API)\n- Support for texture atlases\n- Asset loader / sprite sheet loader\n- Auto-detect which renderer should be used\n- Full Mouse and Multi-touch Interaction\n- Text\n- BitmapFont text\n- Multiline Text\n- Render Texture\n- Primitive Drawing\n- Masking\n- Filters\n- [User Plugins](https://github.com/pixijs/pixi.js/wiki/v3-Pixi-Plugins)\n\n### Basic Usage Example ###\n\n```js\n// The application will create a renderer using WebGL, if possible,\n// with a fallback to a canvas render. It will also setup the ticker\n// and the root stage PIXI.Container.\nvar app = new PIXI.Application();\n\n// The application will create a canvas element for you that you\n// can then insert into the DOM.\ndocument.body.appendChild(app.view);\n\n// load the texture we need\nPIXI.loader.add('bunny', 'bunny.png').load(function(loader, resources) {\n\n    // This creates a texture from a 'bunny.png' image.\n    var bunny = new PIXI.Sprite(resources.bunny.texture);\n\n    // Setup the position of the bunny\n    bunny.x = app.renderer.width / 2;\n    bunny.y = app.renderer.height / 2;\n\n    // Rotate around the center\n    bunny.anchor.x = 0.5;\n    bunny.anchor.y = 0.5;\n\n    // Add the bunny to the scene we are building.\n    app.stage.addChild(bunny);\n\n    // Listen for frame updates\n    app.ticker.add(function() {\n         // each frame we spin the bunny around a bit\n        bunny.rotation += 0.01;\n    });\n});\n```\n\n### How to build ###\n\nNote that for most users you don't need to build this project. If all you want is to use PixiJS, then\njust download one of our [prebuilt releases](https://github.com/pixijs/pixi.js/releases). Really\nthe only time you should need to build PixiJS is if you are developing it.\n\nIf you don't already have Node.js and NPM, go install them. Then, in the folder where you have cloned\nthe repository, install the build dependencies using npm:\n\n```\n$> npm install\n```\n\nThen, to build the source, run:\n\n```\n$> npm run dist\n```\n\nThis will create a minified version at `dist/pixi.min.js` and a non-minified version at `dist/pixi.js`\nwith all the plugins in the PixiJS project.\n\nIf there are specific plugins you don't want, say \"interaction\" or \"extras\", you can exclude those:\n\n```\n$> npm run dist -- --exclude extras --exclude interaction\n```\n\nYou can also use the short-form `-e`:\n\n```\n$> npm run dist -- -e extras -e interaction -e filters\n```\n\n### How to generate the documentation ###\n\nThe docs can be generated using npm:\n\n```\n$> npm run docs\n```\n\nThe documentation uses [Jaguar.js](https://github.com/pixijs/jaguarjs-jsdoc) and the jsdoc format, the configuration file can be found at [scripts/jsdoc.conf.json](scripts/jsdoc.conf.json)\n\n### License ###\n\nThis content is released under the (http://opensource.org/licenses/MIT) MIT License.\n\n[![Analytics](https://ga-beacon.appspot.com/UA-39213431-2/pixi.js/index)](https://github.com/igrigorik/ga-beacon)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/pixijs/pixi.js.git"
  },
  "scripts": {
    "build": "npm run dist",
    "clean": "rimraf dist lib && mkdirp dist && mkdir lib",
    "coverage": "npm run unit-test -- -c dist/pixi.js -s -h",
    "dist": "pixify -d dist -n PIXI -o pixi -t babelify",
    "docs": "jsdoc -c scripts/jsdoc.conf.json -R README.md",
    "lib": "babel src --out-dir lib -s",
    "lint": "eslint scripts src test --max-warnings 0",
    "lintfix": "npm run lint --fix",
    "postpublish": "git push && git push --tags",
    "postversion": "npm run clean && npm run build && npm run lib && npm run unit-test",
    "prebuild": "npm run lint",
    "precoverage": "rimraf coverage",
    "predist": "rimraf dist/**",
    "predocs": "rimraf docs/**",
    "prelib": "rimraf lib/**",
    "prerenders": "npm --prefix scripts/renders i scripts/renders",
    "prestart": "npm run clean",
    "publish:major": "npm version major && npm publish",
    "publish:minor": "npm version minor && npm publish",
    "publish:patch": "npm version patch && npm publish",
    "renders": "electron scripts/renders",
    "start": "parallelshell \"npm run watch\" \"npm run watch:lint\" \"npm run watch:lib\"",
    "test": "npm run lint && npm run dist && npm run coverage",
    "unit-test": "floss --path test/index.js",
    "unit-test:debug": "npm run unit-test -- --debug",
    "watch": "npm run dist -- --watch",
    "watch:lib": "npm run lib -- --watch",
    "watch:lint": "watch \"eslint scripts src test || exit 0\" src"
  },
  "version": "4.6.1"
}
